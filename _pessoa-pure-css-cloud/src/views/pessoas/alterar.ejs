<div class="pure-g">
  <div class="pure-u-1">
      <form class="pure-form pure-form-stacked" action="/pessoas/alterar/<%= pessoa.id %>" method="POST" id="formAlterar">
          <input type="hidden" name="id" value="<%= pessoa.id %>">
          
          <div class="pure-g">
              <!-- Campo CPF -->
              <div class="pure-u-1 pure-u-md-1-2 campo-form">
                  <label for="cpf">CPF *</label>
                  <input 
                      type="text" 
                      id="cpf" 
                      name="cpf" 
                      class="pure-input-1 cpf-mask" 
                      value="<%= pessoa.cpf ? pessoa.cpf.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4') : '' %>" 
                      required>
                  <span class="pure-form-message">Digite apenas números</span>
              </div>

              <!-- Campo Nome -->
              <div class="pure-u-1 pure-u-md-1-2 campo-form">
                  <label for="nome">Nome Completo *</label>
                  <input 
                      type="text" 
                      id="nome" 
                      name="nome" 
                      class="pure-input-1" 
                      value="<%= pessoa.nome %>" 
                      maxlength="60"
                      required>
                  <span class="pure-form-message">Máximo de 60 caracteres</span>
              </div>

              <!-- Campo Data de Nascimento -->
              <div class="pure-u-1 pure-u-md-1-2 campo-form">
                  <label for="data_nascimento">Data de Nascimento *</label>
                  <input 
                      type="date" 
                      id="data_nascimento" 
                      name="data_nascimento" 
                      class="pure-input-1" 
                      value="<%= pessoa.data_nascimento ? pessoa.data_nascimento.split('T')[0] : '' %>" 
                      max="<%= new Date().toISOString().split('T')[0] %>"
                      required>
                  <span class="pure-form-message">Não pode ser data futura</span>
              </div>

              <!-- Campo Situação -->
              <div class="pure-u-1 pure-u-md-1-2 campo-form">
                  <label for="situacao">Situação *</label>
                  <select 
                      id="situacao" 
                      name="situacao" 
                      class="pure-input-1" 
                      required>
                      <option value="A" <%= pessoa.situacao === 'A' ? 'selected' : '' %>>Ativo</option>
                      <option value="I" <%= pessoa.situacao === 'I' ? 'selected' : '' %>>Inativo</option>
                  </select>
              </div>

              <!-- Botões do formulário -->
              <div class="pure-u-1 campo-form">
                  <div class="pure-button-group" role="group">
                      <button type="submit" class="pure-button pure-button-primary">
                          <i class="fa fa-save"></i> Salvar Alterações
                      </button>
                      <button type="button" class="pure-button pure-button-warning btn-restaurar">
                          <i class="fa fa-undo"></i> Restaurar
                      </button>
                      <a href="/pessoas" class="pure-button">
                          <i class="fa fa-times"></i> Cancelar
                      </a>
                  </div>
              </div>
          </div>
      </form>
  </div>
</div>

<!-- Scripts específicos da página -->
<script>
$(document).ready(function() {
  const form = $('#formAlterar');
  
  // Armazena os valores originais para restauração
  const valoresOriginais = {
      cpf: $('#cpf').val(),
      nome: $('#nome').val(),
      data_nascimento: $('#data_nascimento').val(),
      situacao: $('#situacao').val()
  };

  // Restaurar valores originais
  $('.btn-restaurar').click(function() {
      Swal.fire({
          title: 'Confirmar restauração',
          text: 'Deseja restaurar os valores originais do registro?',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Sim, restaurar',
          cancelButtonText: 'Cancelar'
      }).then((result) => {
          if (result.isConfirmed) {
              $('#cpf').val(valoresOriginais.cpf);
              $('#nome').val(valoresOriginais.nome);
              $('#data_nascimento').val(valoresOriginais.data_nascimento);
              $('#situacao').val(valoresOriginais.situacao);
              
              Swal.fire({
                  title: 'Valores restaurados',
                  text: 'Os valores originais foram restaurados',
                  icon: 'success',
                  timer: 1500
              });
          }
      });
  });

  // Validação do formulário
  form.on('submit', function(e) {
      e.preventDefault();
      
      // Validação do CPF
      const cpf = $('#cpf').val().replace(/\D/g, '');
      if (cpf.length !== 11) {
          Swal.fire({
              title: 'Erro de validação',
              text: 'CPF deve conter 11 dígitos',
              icon: 'error'
          });
          return false;
      }

      // Validação do nome
      const nome = $('#nome').val().trim();
      if (nome.length < 3 || nome.length > 60) {
          Swal.fire({
              title: 'Erro de validação',
              text: 'Nome deve ter entre 3 e 60 caracteres',
              icon: 'error'
          });
          return false;
      }

      // Validação da data de nascimento
      const dataNascimento = new Date($('#data_nascimento').val());
      if (dataNascimento > new Date()) {
          Swal.fire({
              title: 'Erro de validação',
              text: 'Data de nascimento não pode ser futura',
              icon: 'error'
          });
          return false;
      }

      // Confirmação antes de salvar alterações
      Swal.fire({
          title: 'Confirmar alterações',
          text: 'Deseja salvar as alterações realizadas?',
          icon: 'question',
          showCancelButton: true,
          confirmButtonText: 'Sim, salvar',
          cancelButtonText: 'Cancelar'
      }).then((result) => {
          if (result.isConfirmed) {
              // Envio do formulário via AJAX
              $.ajax({
                  url: form.attr('action'),
                  method: 'POST',
                  data: form.serialize(),
                  success: function(response) {
                      Swal.fire({
                          title: 'Sucesso',
                          text: 'Alterações salvas com sucesso',
                          icon: 'success'
                      }).then(() => {
                          window.location.href = '/pessoas';
                      });
                  }
              });
          }
      });
  });

  // Formatação e validação do CPF em tempo real
  $('#cpf').on('input', function() {
      let valor = $(this).val().replace(/\D/g, '');
      if (valor.length > 11) {
          valor = valor.substr(0, 11);
      }
      $(this).val(valor.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4'));
  });

  // Validação do nome em tempo real
  $('#nome').on('input', function() {
      let valor = $(this).val().replace(/[^A-Za-zÀ-ÖØ-öø-ÿ\s]/g, '');
      $(this).val(valor);
  });

  // Confirmação antes de sair sem salvar
  const verificarAlteracoes = function() {
      return $('#cpf').val() !== valoresOriginais.cpf ||
             $('#nome').val() !== valoresOriginais.nome ||
             $('#data_nascimento').val() !== valoresOriginais.data_nascimento ||
             $('#situacao').val() !== valoresOriginais.situacao;
  };

  window.onbeforeunload = function() {
      if (verificarAlteracoes()) {
          return 'Existem alterações não salvas. Deseja realmente sair?';
      }
  };
});
</script>
